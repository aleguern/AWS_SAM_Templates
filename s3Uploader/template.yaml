AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  BucketImages:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: bucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            AllowedOrigins:
              - '*'
            MaxAge: 3000

  BucketImagesPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketImages
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${BucketImages.Arn}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub ${BucketImages.Arn}/*
              - !GetAtt BucketImages.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: OAC
        Name: !Ref AWS::StackName
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Comment: distribution
        DefaultCacheBehavior:
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # disabled
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        HttpVersion: http2and3
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        IPV6Enabled: false
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt BucketImages.DomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id

  PresignedUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/presigned-url
      Environment:
        Variables:
          S3_BUCKET: !Ref BucketImages
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
              Resource:
                - !Sub arn:aws:s3:::${BucketImages}
                - !Sub arn:aws:s3:::${BucketImages}/*
      Events:
        GetPresignedUrl:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /presigned-url
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - index.ts
